/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Devices;
import io.swagger.model.ErrorResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-01-31T04:54:18.490Z[GMT]")
@Api(value = "devices", description = "the devices API")
public interface DevicesApi {

    @ApiOperation(value = "", nickname = "getDevices", notes = "returns all registered devices", response = Devices.class, tags={ "Devices", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A paginated list of devices", response = Devices.class),
        @ApiResponse(code = 400, message = "Invalid page supplied", response = ErrorResponse.class),
        @ApiResponse(code = 403, message = "Access Denied", response = ErrorResponse.class),
        @ApiResponse(code = 404, message = "Page not found", response = ErrorResponse.class) })
    @RequestMapping(value = "/devices",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Devices> getDevices(@ApiParam(value = "" ,required=true) @RequestHeader(value="Authorization", required=true) String authorization,@ApiParam(value = "which set of devices to return") @Valid @RequestParam(value = "page", required = false) Integer page);

}
